#!/usr/bin/env sh
dmenu_bin() {
	rofi-dmenu -p "Choose your new colorscheme:"
}

colorscheme_menu() {
	printf "%s\n" \
		"doom-one" \
		"doom-vibrant" \
		"darkplus" \
		"dracula" \
		"onedark" \
		"tokyonight" |
		dmenu_bin
}

alaconf="$HOME/.config/alacritty/alacritty.yml"
alacritty_change() {
	sed -i "s/^colors: .\+/colors: \*$colorscheme/" "$alaconf"
}

kittyconf="$HOME/.config/kitty/kitty.conf"
kitty_change() {
	sed -i "s/^include .*/include $colorscheme/" "$kittyconf"
}

# polyconf="$HOME/.config/polybar/config.ini"
# polybar_change() {
# 	sed -e "s/^bg =.\+/bg = #f0$(xrdb -get background | cut -c 2-)/" \
# 		-e "s/^fg =.\+/fg = #$(xrdb -get foreground | cut -c 2-)/" \
# 		-i "$polyconf"
# }

doomorg="$HOME/.config/doom/config.org"
doomconf="$HOME/.config/doom/config.el"
emacsorg="$HOME/.local/share/emacs/gnu/init.org"
emacsconf="$HOME/.local/share/emacs/gnu/init.el"
emacs_change() {
	case "$colorscheme" in
	"doom-one") theme="doom-one" ;;
	"dracula") theme="doom-dracula" ;;
	"darkplus") theme="doom-dark+" ;;
	"tokyonight") theme="doom-tokyo-night" ;;
	esac
	sed -si "s/^(setq doom-theme '.*)/(setq doom-theme '$theme)/" "$doomconf" "$doomorg"
	sed -si "s/^(elk\/load-theme '.*)/(elk\/load-theme '$theme)/" "$emacsconf" "$emacsorg"
}

xresconf="$HOME/.config/x11/Xresources"
xresources_change() {
	sed -i "s/^#include /! #include /g;/$colorscheme\.xresources/s/^!\s//" "$xresconf"
	sleep 0.1
	xrdb -merge "$xresconf"
	sleep 0.1
}

zathura_change() {
	cat <<-CONF >"$HOME/.config/zathura/zathurarc"
      # Configuration
		  set scroll-page-aware "true"
		  # set smooth-scroll "true"
		  set scroll-full-overlap 0.01
		  set scroll-step 100

		  set dbus-service true
		  set synctex true
		  set sandbox none

		  set statusbar-h-padding 0
		  set statusbar-v-padding 0
		  set page-padding 1
		  set selection-clipboard clipboard
		  set highlight-transparency .5
		  set zoom-center "true"
		  map <Space> toggle_index
		  map D toggle_page_mode
		  map r reload
		  map R rotate
		  map K zoom in
		  map J zoom out
		  map i recolor
		  map p print
		  map g goto top

		  set adjust-open width
		  set recolor true
		  set recolor-keephue             true      # keep original color

		  set default-bg                  "$(xrdb -get background)" # bg
		  set default-fg                  "$(xrdb -get foreground)" # fg
		  set render-loading              true
		  set render-loading-bg           "$(xrdb -get background)" # bg
		  set render-loading-fg           "$(xrdb -get foreground)" # fg

		  # Recolor book content's color
		  set recolor-lightcolor          "$(xrdb -get background)" # bg
		  set recolor-darkcolor           "$(xrdb -get foreground)" # fg
	CONF
}

herbstluft_change() {
	cat <<-CONF >"$HOME/.config/herbstluftwm/hlwmt/colors"
		#!/bin/sh
		hc set frame_border_active_color '#222222'
		hc set frame_border_normal_color '#101010'
		hc set frame_bg_normal_color '#565656'
		hc set frame_bg_active_color '$(xrdb -get foreground)'

		hc attr theme.active.color '$(xrdb -get color14)'

		hc attr theme.normal.color '$(xrdb -get background)'

		hc attr theme.urgent.color orange
		hc attr theme.inner_color '#ff00'

		hc attr theme.floating.outer_color '$(xrdb -get color5)'
	CONF
}

neovim_colorconf="$HOME/.config/nvim/lua/configs/colorscheme.lua"
lunarvim_colorconf="$HOME/.config/lvim/config.lua"
neovim_change() {
	case "$colorscheme" in
	"darkplus") theme="vscode" ;;
	"onedark") theme="onedark" ;;
	"doom-one") theme="doom-one" ;;
	"doom-vibrant") theme="doom-one" ;;
	"dracula") theme="dracula" ;;
	"tokyonight") theme="tokyonight" ;;
	esac
	sed -i "s/colorscheme = .*/colorscheme = \"$theme\"/g" "$neovim_colorconf"
	sed -i "s/lvim\.colorscheme = .*/lvim\.colorscheme = \"$theme\"/g" "$lunarvim_colorconf"
}

appendix() {
	notify-send "Change colorscheme variable manually in gtk and qt. Restart emacs for changes to take effect."
}

colorscheme=$(colorscheme_menu)

# Don't do anything if variable is empty
if [ -z "$colorscheme" ]; then
	return 1
fi

command -v alacritty && alacritty_change
command -v kitty && kitty_change
xresources_change
# emacs_change
zathura_change
herbstluft_change
# polybar_change
neovim_change
appendix
