# General settings
set -ga terminal-overrides ',xterm-*:Tc'
set -s escape-time 0

# Remove defaults keybinds
unbind C-b
unbind '"'
unbind %
unbind s
unbind x               # unbind-key ‚Äúx‚Äù from it‚Äôs current job of ‚Äúask and then close‚Äù

# Set a less awkward prefix
set-option -g prefix C-a
bind C-a send-prefix

# Replicate vim and i3 behaviour
bind v split-window -h -c "#{pane_current_path}" # let's open pane with current directory with -c option
bind s split-window -v -c "#{pane_current_path}"

# Rebind to saner places
bind e choose-session

bind x kill-pane       # rebind-key it to just ‚Äúclose‚Äù
bind X kill-session    # key combo for killing the entire session - <prefix> + shift + x

set -g allow-rename off # don't rename windows automatically
set -g base-index 1
set -g pane-base-index 1    # pane index will start with 1
set -g renumber-windows on
set -g status-keys vi

# Enable mouse
set -g mouse on

# vi mode
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

## vim and tmux integration
# check if the pane is a vim instance
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# check if the pane is a fzf/fzy instance
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fz[f,y]$'"

# movement using the Control key
bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# resize using the Alt key
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 5'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Bring back clear screen under tmux prefix
bind-key C-l send-keys 'C-l'

## Custom functions
bind r source-file ~/.config/tmux/tmux.conf\; display-message "Tmux configuration reloaded"

# bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"
# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww tmux-sessionizer"

bind-key -r i run-shell "tmux neww tmux-cht.sh"
bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"

######################
###     Themes     ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

set -g status-justify left
set -g status-style 'fg=colour0'
set -g status-interval 2
set -g status-right-length 100
set -g status-right '#[fg=colour4]#(date +'%H:%M') #[fg=colour5]#(date +'%Y-%m-')#[fg=colour7]#(date +'%d') #[fg=colour15]| #S'
set -g status-left '' # info on left (no session display)
set -g message-style "fg=colour7"
set -g message-command-style "fg=colour8"
set -g mode-style "bg=colour4,fg=colour0"
set -g pane-border-style "fg=colour0"
set -g pane-active-border-style "fg=colour7"
set -g display-panes-active-colour "colour3"
set -g status-position bottom
set -g window-status-format "#[fg=colour7] #W "
set -g window-status-current-format "#[fg=colour4] #W#{?window_zoomed_flag,*Z*,}"

######################
###     Plugins    ###
######################

set -g @plugin 'tmux-plugins/tpm'


## Pomodoro
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Options
set -g @pomodoro_start 'p'                          # Start a Pomodoro with tmux-prefix + p
set -g @pomodoro_cancel 'P'                         # Cancel a Pomodoro with tmux-prefix key + P

set -g @pomodoro_mins 25                            # The duration of the pomodoro
set -g @pomodoro_break_mins 5                       # The duration of the break after the pomodoro

set -g @pomodoro_on " #[fg=$text_red]üçÖ "           # The formatted output when the pomodoro is running
set -g @pomodoro_complete " #[fg=$text_green]üçÖ "   # The formatted output when the break is running

set -g @pomodoro_notifications 'on'                 # Turn on/off desktop notifications
set -g @pomodoro_sound 'Pop'                        # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use)


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
